#!/usr/bin/env node
///////////////////////////////////////////////////////////////////////////////

var ArgumentParser = require('argparse').ArgumentParser,
    ProtoBuf = require('protobufjs'),
    now = require('performance-now'),
    WebSocket = require('ws');

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

var parser = new ArgumentParser({
  addHelp: true, description: 'RPC Client', version: '0.0.1'
});

parser.addArgument(['port'], {
    nargs: '?', help: 'Server Port', defaultValue: '8088'
});
parser.addArgument(['host'], {
    nargs: '?', help: 'Server Host', defaultValue: 'localhost'
});

///////////////////////////////////////////////////////////////////////////////

var args = parser.parseArgs();

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

var CoreFactory = ProtoBuf.loadProtoFile({
    root: __dirname + '/../../../protocol', file: 'core.proto'
});

var Core = CoreFactory.build();

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

var ws = new WebSocket('ws://' + args.host + ':' + args.port);

///////////////////////////////////////////////////////////////////////////////

ws.onmessage = function (ev) {
    var ts = JSON.parse(ev.data);
    console.log(now() - ts.value);
};

///////////////////////////////////////////////////////////////////////////////

ws.onopen = function () {
    var ts;
    var id = setInterval(function () {
        ts = JSON.stringify({value: now()});
        ws.send(ts, {
            binary: true
        });
    }, 0);

    setTimeout(function () {
        clearInterval(id);
        ws.close();
    }, 10000);
};

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
